@model MPOS.App_Context.ItemTransaction


@{
    ViewBag.Title = "Create";
}

<h2>Replenishments</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <p style="color:red"><b>@ViewBag.Message</b></p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.ItemID, "Item", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ItemID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>

}
@*@using (Html.BeginForm())
{
<table id="tbl" class="table table-striped table-bordered table-hover table-condensed" cellpadding="0" cellspacing="0">
    <thead>
        <tr class="text-center">
            <th style="width:200px">Item</th>
            <th style="width:200px">Quantity</th>
            <th style="width:200px">Transaction Type</th>
            <th style="width:200px">Date</th>

            <th style="width:200px"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Replenishments in Model)
        {
            <tr class="text-center">
                <td>@Replenishments.ItemName</td>
                <td>@Replenishments.Quantity</td>
                <td>@Replenishments.TransactionTypeId</td>
                <td>@Replenishments.EffectiveDate</td>
                <td><input type="button" value="Remove" onclick="Remove(this)" /></td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
            <td>@Html.DropDownList("txtName", (SelectList)ViewBag.ItemID, htmlAttributes: new { @class = "form-control", @style = "width:190px" })</td>
            <td><input type="number" id="txtQuantity" class="form-control text-center" style="width:190px" required="required" min="1" /></td>
            <td><input type="number" id="TypeId" class="form-control text-center" style="width:190px" value="1" placeholder="Replenishment" readonly="readonly" /></td>
            <td><input type="text" id="EffDate" class="form-control text-center" style="width:190px" value="@DateTime.Now.Date.ToShortDateString()" readonly="readonly" /></td>
            <td><input type="button" id="btnAdd" value="Add" class="btn btn-info" /></td>
        </tr>
    </tfoot>
</table>
}*@

<style>
    input[type=number]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        display: none;
    }
</style>
<script>
    var inputBox = document.getElementById("Quantity");

    var invalidChars = [
        "-",
        "+",
        "e",
    ];

    inputBox.addEventListener("keydown", function (e) {
        if (invalidChars.includes(e.key)) {
            e.preventDefault();
        }
    });
</script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link href="~/Assets/css/select2.min.css" rel="stylesheet" />
<script src="~/Assets/js/select2.full.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $('#ItemID').select2({ placeholder: "Select Item" }); 

</script>
    
