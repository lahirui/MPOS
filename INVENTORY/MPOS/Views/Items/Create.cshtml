@model MPOS.App_Context.Item

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Items</h2>
        <p style="color:red"><b>@ViewBag.Message</b></p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ItemTypeId, "Item Category", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.ItemTypeId, null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ItemTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ItemName, "Item", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UnitPrice, "Unit Price", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @required = "required" } })
                        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-7">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UnitCapacity, "Unit Capacity", htmlAttributes: new { @class = "control-label col-md-7" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UnitCapacity, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.UnitCapacity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.Label("Metric", "Metric", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.MetricId, null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ItemTypeId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<link href="~/Assets/css/select2.min.css" rel="stylesheet" />
<script src="~/Assets/js/select2.full.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $('#ItemTypeId').select2({ placeholder: "Select Item Category" });
    $('#MetricId').select2({ placeholder: "Select Metric" });
</script>
<style>
    input[type=number]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        display: none;
    }
</style>
<script>
    var UnitPrice = document.getElementById("Deposit");
    var UnitCapacity = document.getElementById("UnitCapacity");
    var DaySellingQty = document.getElementById("DaySellingQty");

    var invalidChars = [
        "-",
        "+",
        "e",
    ];

    UnitPrice.addEventListener("keydown", function (e) {
        if (invalidChars.includes(e.key)) {
            e.preventDefault();
        }
    });
    UnitCapacity.addEventListener("keydown", function (e) {
        if (invalidChars.includes(e.key)) {
            e.preventDefault();
        }
    });
    DaySellingQty.addEventListener("keydown", function (e) {
        if (invalidChars.includes(e.key)) {
            e.preventDefault();
        }
    });
</script>